// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vlan.proto

package OpenNos_EthSwitch_Vlan

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VlanMgmtResult_Result int32

const (
	VlanMgmtResult_FAILED  VlanMgmtResult_Result = 0
	VlanMgmtResult_SUCCESS VlanMgmtResult_Result = 1
)

var VlanMgmtResult_Result_name = map[int32]string{
	0: "FAILED",
	1: "SUCCESS",
}

var VlanMgmtResult_Result_value = map[string]int32{
	"FAILED":  0,
	"SUCCESS": 1,
}

func (x VlanMgmtResult_Result) String() string {
	return proto.EnumName(VlanMgmtResult_Result_name, int32(x))
}

func (VlanMgmtResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a45eaf1ce69151e7, []int{2, 0}
}

type Port struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_a45eaf1ce69151e7, []int{0}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type NativeVlan struct {
	Vid                  uint32   `protobuf:"varint,1,opt,name=vid,proto3" json:"vid,omitempty"`
	Ports                []*Port  `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NativeVlan) Reset()         { *m = NativeVlan{} }
func (m *NativeVlan) String() string { return proto.CompactTextString(m) }
func (*NativeVlan) ProtoMessage()    {}
func (*NativeVlan) Descriptor() ([]byte, []int) {
	return fileDescriptor_a45eaf1ce69151e7, []int{1}
}

func (m *NativeVlan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NativeVlan.Unmarshal(m, b)
}
func (m *NativeVlan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NativeVlan.Marshal(b, m, deterministic)
}
func (m *NativeVlan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NativeVlan.Merge(m, src)
}
func (m *NativeVlan) XXX_Size() int {
	return xxx_messageInfo_NativeVlan.Size(m)
}
func (m *NativeVlan) XXX_DiscardUnknown() {
	xxx_messageInfo_NativeVlan.DiscardUnknown(m)
}

var xxx_messageInfo_NativeVlan proto.InternalMessageInfo

func (m *NativeVlan) GetVid() uint32 {
	if m != nil {
		return m.Vid
	}
	return 0
}

func (m *NativeVlan) GetPorts() []*Port {
	if m != nil {
		return m.Ports
	}
	return nil
}

type VlanMgmtResult struct {
	Result               VlanMgmtResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=OpenNos.EthSwitch.Vlan.VlanMgmtResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *VlanMgmtResult) Reset()         { *m = VlanMgmtResult{} }
func (m *VlanMgmtResult) String() string { return proto.CompactTextString(m) }
func (*VlanMgmtResult) ProtoMessage()    {}
func (*VlanMgmtResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a45eaf1ce69151e7, []int{2}
}

func (m *VlanMgmtResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VlanMgmtResult.Unmarshal(m, b)
}
func (m *VlanMgmtResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VlanMgmtResult.Marshal(b, m, deterministic)
}
func (m *VlanMgmtResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VlanMgmtResult.Merge(m, src)
}
func (m *VlanMgmtResult) XXX_Size() int {
	return xxx_messageInfo_VlanMgmtResult.Size(m)
}
func (m *VlanMgmtResult) XXX_DiscardUnknown() {
	xxx_messageInfo_VlanMgmtResult.DiscardUnknown(m)
}

var xxx_messageInfo_VlanMgmtResult proto.InternalMessageInfo

func (m *VlanMgmtResult) GetResult() VlanMgmtResult_Result {
	if m != nil {
		return m.Result
	}
	return VlanMgmtResult_FAILED
}

func init() {
	proto.RegisterEnum("OpenNos.EthSwitch.Vlan.VlanMgmtResult_Result", VlanMgmtResult_Result_name, VlanMgmtResult_Result_value)
	proto.RegisterType((*Port)(nil), "OpenNos.EthSwitch.Vlan.Port")
	proto.RegisterType((*NativeVlan)(nil), "OpenNos.EthSwitch.Vlan.NativeVlan")
	proto.RegisterType((*VlanMgmtResult)(nil), "OpenNos.EthSwitch.Vlan.VlanMgmtResult")
}

func init() { proto.RegisterFile("vlan.proto", fileDescriptor_a45eaf1ce69151e7) }

var fileDescriptor_a45eaf1ce69151e7 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xcb, 0x49, 0xcc,
	0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xf3, 0x2f, 0x48, 0xcd, 0xf3, 0xcb, 0x2f, 0xd6,
	0x73, 0x2d, 0xc9, 0x08, 0x2e, 0xcf, 0x2c, 0x49, 0xce, 0xd0, 0x0b, 0xcb, 0x49, 0xcc, 0x53, 0x92,
	0xe2, 0x62, 0x09, 0xc8, 0x2f, 0x2a, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x82, 0xb8, 0xb8, 0xfc, 0x12, 0x4b, 0x32, 0xcb,
	0x52, 0x41, 0x2a, 0x85, 0x04, 0xb8, 0x98, 0xcb, 0x32, 0x53, 0xc0, 0x0a, 0x78, 0x83, 0x40, 0x4c,
	0x21, 0x23, 0x2e, 0xd6, 0x82, 0xfc, 0xa2, 0x92, 0x62, 0x09, 0x26, 0x05, 0x66, 0x0d, 0x6e, 0x23,
	0x19, 0x3d, 0xec, 0x76, 0xe8, 0x81, 0x2c, 0x08, 0x82, 0x28, 0x55, 0xaa, 0xe2, 0xe2, 0x03, 0x89,
	0xf9, 0xa6, 0xe7, 0x96, 0x04, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x08, 0xb9, 0x72, 0xb1, 0x15, 0x81,
	0x59, 0x60, 0xa3, 0xf9, 0x8c, 0x74, 0x71, 0x19, 0x83, 0xaa, 0x4f, 0x0f, 0x42, 0x05, 0x41, 0x35,
	0x2b, 0x29, 0x72, 0xb1, 0x41, 0x0d, 0xe4, 0xe2, 0x62, 0x73, 0x73, 0xf4, 0xf4, 0x71, 0x75, 0x11,
	0x60, 0x10, 0xe2, 0xe6, 0x62, 0x0f, 0x0e, 0x75, 0x76, 0x76, 0x0d, 0x0e, 0x16, 0x60, 0x34, 0xca,
	0xe4, 0xe2, 0x80, 0x99, 0x21, 0x14, 0xcb, 0xc5, 0x1b, 0x9c, 0x5a, 0x82, 0xe4, 0x3d, 0x25, 0x5c,
	0xd6, 0x22, 0xd4, 0x48, 0xa9, 0x11, 0xe7, 0x34, 0x25, 0x86, 0x24, 0x36, 0x70, 0xa8, 0x1b, 0x03,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xba, 0xc7, 0x17, 0x24, 0x83, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VlanMgmtClient is the client API for VlanMgmt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VlanMgmtClient interface {
	SetNativeVlan(ctx context.Context, in *NativeVlan, opts ...grpc.CallOption) (*VlanMgmtResult, error)
}

type vlanMgmtClient struct {
	cc grpc.ClientConnInterface
}

func NewVlanMgmtClient(cc grpc.ClientConnInterface) VlanMgmtClient {
	return &vlanMgmtClient{cc}
}

func (c *vlanMgmtClient) SetNativeVlan(ctx context.Context, in *NativeVlan, opts ...grpc.CallOption) (*VlanMgmtResult, error) {
	out := new(VlanMgmtResult)
	err := c.cc.Invoke(ctx, "/OpenNos.EthSwitch.Vlan.VlanMgmt/SetNativeVlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VlanMgmtServer is the server API for VlanMgmt service.
type VlanMgmtServer interface {
	SetNativeVlan(context.Context, *NativeVlan) (*VlanMgmtResult, error)
}

// UnimplementedVlanMgmtServer can be embedded to have forward compatible implementations.
type UnimplementedVlanMgmtServer struct {
}

func (*UnimplementedVlanMgmtServer) SetNativeVlan(ctx context.Context, req *NativeVlan) (*VlanMgmtResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNativeVlan not implemented")
}

func RegisterVlanMgmtServer(s *grpc.Server, srv VlanMgmtServer) {
	s.RegisterService(&_VlanMgmt_serviceDesc, srv)
}

func _VlanMgmt_SetNativeVlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NativeVlan)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VlanMgmtServer).SetNativeVlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenNos.EthSwitch.Vlan.VlanMgmt/SetNativeVlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VlanMgmtServer).SetNativeVlan(ctx, req.(*NativeVlan))
	}
	return interceptor(ctx, in, info, handler)
}

var _VlanMgmt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenNos.EthSwitch.Vlan.VlanMgmt",
	HandlerType: (*VlanMgmtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetNativeVlan",
			Handler:    _VlanMgmt_SetNativeVlan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vlan.proto",
}
