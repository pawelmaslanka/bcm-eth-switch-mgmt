// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lag_management.proto

package OpenNos_Plugin_Lag

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RpcResult_Result int32

const (
	RpcResult_FAILED  RpcResult_Result = 0
	RpcResult_SUCCESS RpcResult_Result = 1
)

var RpcResult_Result_name = map[int32]string{
	0: "FAILED",
	1: "SUCCESS",
}

var RpcResult_Result_value = map[string]int32{
	"FAILED":  0,
	"SUCCESS": 1,
}

func (x RpcResult_Result) String() string {
	return proto.EnumName(RpcResult_Result_name, int32(x))
}

func (RpcResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f7538dc41eccda59, []int{3, 0}
}

type LagIntf struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LagIntf) Reset()         { *m = LagIntf{} }
func (m *LagIntf) String() string { return proto.CompactTextString(m) }
func (*LagIntf) ProtoMessage()    {}
func (*LagIntf) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7538dc41eccda59, []int{0}
}

func (m *LagIntf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LagIntf.Unmarshal(m, b)
}
func (m *LagIntf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LagIntf.Marshal(b, m, deterministic)
}
func (m *LagIntf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LagIntf.Merge(m, src)
}
func (m *LagIntf) XXX_Size() int {
	return xxx_messageInfo_LagIntf.Size(m)
}
func (m *LagIntf) XXX_DiscardUnknown() {
	xxx_messageInfo_LagIntf.DiscardUnknown(m)
}

var xxx_messageInfo_LagIntf proto.InternalMessageInfo

func (m *LagIntf) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Port struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7538dc41eccda59, []int{1}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type LagMembers struct {
	Intf                *LagIntf `protobuf:"bytes,1,opt,name=iface,proto3" json:"iface,omitempty"`
	Members              []*Port   `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *LagMembers) Reset()         { *m = LagMembers{} }
func (m *LagMembers) String() string { return proto.CompactTextString(m) }
func (*LagMembers) ProtoMessage()    {}
func (*LagMembers) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7538dc41eccda59, []int{2}
}

func (m *LagMembers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LagMembers.Unmarshal(m, b)
}
func (m *LagMembers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LagMembers.Marshal(b, m, deterministic)
}
func (m *LagMembers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LagMembers.Merge(m, src)
}
func (m *LagMembers) XXX_Size() int {
	return xxx_messageInfo_LagMembers.Size(m)
}
func (m *LagMembers) XXX_DiscardUnknown() {
	xxx_messageInfo_LagMembers.DiscardUnknown(m)
}

var xxx_messageInfo_LagMembers proto.InternalMessageInfo

func (m *LagMembers) GetIntf() *LagIntf {
	if m != nil {
		return m.Intf
	}
	return nil
}

func (m *LagMembers) GetMembers() []*Port {
	if m != nil {
		return m.Members
	}
	return nil
}

type RpcResult struct {
	Result               RpcResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=OpenNos.Plugin.Lag.RpcResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RpcResult) Reset()         { *m = RpcResult{} }
func (m *RpcResult) String() string { return proto.CompactTextString(m) }
func (*RpcResult) ProtoMessage()    {}
func (*RpcResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7538dc41eccda59, []int{3}
}

func (m *RpcResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcResult.Unmarshal(m, b)
}
func (m *RpcResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcResult.Marshal(b, m, deterministic)
}
func (m *RpcResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcResult.Merge(m, src)
}
func (m *RpcResult) XXX_Size() int {
	return xxx_messageInfo_RpcResult.Size(m)
}
func (m *RpcResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcResult.DiscardUnknown(m)
}

var xxx_messageInfo_RpcResult proto.InternalMessageInfo

func (m *RpcResult) GetResult() RpcResult_Result {
	if m != nil {
		return m.Result
	}
	return RpcResult_FAILED
}

func init() {
	proto.RegisterEnum("OpenNos.Plugin.Lag.RpcResult_Result", RpcResult_Result_name, RpcResult_Result_value)
	proto.RegisterType((*LagIntf)(nil), "OpenNos.Plugin.Lag.LagIntf")
	proto.RegisterType((*Port)(nil), "OpenNos.Plugin.Lag.Port")
	proto.RegisterType((*LagMembers)(nil), "OpenNos.Plugin.Lag.LagMembers")
	proto.RegisterType((*RpcResult)(nil), "OpenNos.Plugin.Lag.RpcResult")
}

func init() { proto.RegisterFile("lag_management.proto", fileDescriptor_f7538dc41eccda59) }

var fileDescriptor_f7538dc41eccda59 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x1b, 0xad, 0xa9, 0x99, 0x50, 0x29, 0x83, 0x87, 0x50, 0xb4, 0xd4, 0xe0, 0xa1, 0xa7,
	0x3d, 0xac, 0x57, 0x2f, 0x25, 0x56, 0xa8, 0x44, 0x0d, 0x1b, 0x3c, 0xcb, 0xb6, 0x1d, 0x97, 0x42,
	0xfe, 0x91, 0x6c, 0x3f, 0x96, 0xdf, 0x51, 0xb2, 0x49, 0x8b, 0x60, 0x6c, 0x4f, 0x3b, 0x30, 0xef,
	0xfd, 0xde, 0xcc, 0x2c, 0x5c, 0x27, 0x52, 0x7d, 0xa6, 0x32, 0x93, 0x8a, 0x52, 0xca, 0x34, 0x2b,
	0xca, 0x5c, 0xe7, 0x88, 0xef, 0x05, 0x65, 0x6f, 0x79, 0xc5, 0xa2, 0x64, 0xa7, 0xb6, 0x19, 0x0b,
	0xa5, 0xf2, 0x27, 0x70, 0x19, 0x4a, 0xb5, 0xfc, 0x92, 0x6b, 0x42, 0x84, 0x7e, 0x26, 0x53, 0xf2,
	0xac, 0xa9, 0x35, 0x73, 0x84, 0xa9, 0xfd, 0x31, 0xf4, 0xa3, 0xbc, 0xd4, 0x9d, 0x3d, 0x0d, 0x10,
	0x4a, 0xf5, 0x4a, 0xe9, 0x8a, 0xca, 0x0a, 0x39, 0x5c, 0x6c, 0x6b, 0x8c, 0x91, 0xb8, 0xfc, 0x86,
	0xfd, 0x4d, 0x63, 0xfb, 0x28, 0xd1, 0x48, 0x91, 0xc3, 0x20, 0x6d, 0xec, 0xde, 0xd9, 0xf4, 0x7c,
	0xe6, 0x72, 0xaf, 0xcb, 0x55, 0x0f, 0x20, 0xf6, 0x42, 0x3f, 0x01, 0x47, 0x14, 0x6b, 0x41, 0xd5,
	0x2e, 0xd1, 0xf8, 0x08, 0x76, 0x69, 0x2a, 0x93, 0x7a, 0xc5, 0xef, 0xbb, 0xfc, 0x07, 0x39, 0x6b,
	0x1e, 0xd1, 0x7a, 0xfc, 0x3b, 0xb0, 0x5b, 0x0e, 0x80, 0xfd, 0x3c, 0x5f, 0x86, 0x8b, 0xa7, 0x51,
	0x0f, 0x5d, 0x18, 0xc4, 0x1f, 0x41, 0xb0, 0x88, 0xe3, 0x91, 0xc5, 0xbf, 0x2d, 0x18, 0xd6, 0x4b,
	0x1e, 0x6e, 0x89, 0x2f, 0xe0, 0x04, 0x25, 0x49, 0x4d, 0xa1, 0x54, 0x78, 0x74, 0xcb, 0xf1, 0xed,
	0xd1, 0x69, 0xfc, 0x1e, 0x46, 0x30, 0x9c, 0x6f, 0x36, 0xbf, 0x8e, 0x38, 0xf9, 0x87, 0xd7, 0xf6,
	0x4f, 0x12, 0x57, 0xb6, 0xf9, 0xea, 0x87, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0x67, 0x3f,
	0x05, 0x02, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LagManagementClient is the client API for LagManagement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LagManagementClient interface {
	CreateLag(ctx context.Context, in *LagIntf, opts ...grpc.CallOption) (*RpcResult, error)
	AddLagMembers(ctx context.Context, in *LagMembers, opts ...grpc.CallOption) (*RpcResult, error)
}

type lagManagementClient struct {
	cc *grpc.ClientConn
}

func NewLagManagementClient(cc *grpc.ClientConn) LagManagementClient {
	return &lagManagementClient{cc}
}

func (c *lagManagementClient) CreateLag(ctx context.Context, in *LagIntf, opts ...grpc.CallOption) (*RpcResult, error) {
	out := new(RpcResult)
	err := c.cc.Invoke(ctx, "/OpenNos.Plugin.Lag.LagManagement/CreateLag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lagManagementClient) AddLagMembers(ctx context.Context, in *LagMembers, opts ...grpc.CallOption) (*RpcResult, error) {
	out := new(RpcResult)
	err := c.cc.Invoke(ctx, "/OpenNos.Plugin.Lag.LagManagement/AddLagMembers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LagManagementServer is the server API for LagManagement service.
type LagManagementServer interface {
	CreateLag(context.Context, *LagIntf) (*RpcResult, error)
	AddLagMembers(context.Context, *LagMembers) (*RpcResult, error)
}

// UnimplementedLagManagementServer can be embedded to have forward compatible implementations.
type UnimplementedLagManagementServer struct {
}

func (*UnimplementedLagManagementServer) CreateLag(ctx context.Context, req *LagIntf) (*RpcResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLag not implemented")
}
func (*UnimplementedLagManagementServer) AddLagMembers(ctx context.Context, req *LagMembers) (*RpcResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddLagMembers not implemented")
}

func RegisterLagManagementServer(s *grpc.Server, srv LagManagementServer) {
	s.RegisterService(&_LagManagement_serviceDesc, srv)
}

func _LagManagement_CreateLag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LagIntf)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagManagementServer).CreateLag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenNos.Plugin.Lag.LagManagement/CreateLag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagManagementServer).CreateLag(ctx, req.(*LagIntf))
	}
	return interceptor(ctx, in, info, handler)
}

func _LagManagement_AddLagMembers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LagMembers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LagManagementServer).AddLagMembers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenNos.Plugin.Lag.LagManagement/AddLagMembers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LagManagementServer).AddLagMembers(ctx, req.(*LagMembers))
	}
	return interceptor(ctx, in, info, handler)
}

var _LagManagement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenNos.Plugin.Lag.LagManagement",
	HandlerType: (*LagManagementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateLag",
			Handler:    _LagManagement_CreateLag_Handler,
		},
		{
			MethodName: "AddLagMembers",
			Handler:    _LagManagement_AddLagMembers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lag_management.proto",
}
